/*
 *  Copyright 2010 by Texas Instruments Incorporated.
 *  All rights reserved. Property of Texas Instruments Incorporated.
 *  Restricted rights to use, duplicate or disclose this code are
 *  granted through contract.
 *
 */
/*
 *  ======== stairstep.tcf ========
 *  Configuration script used to generate the example's configuration files
 */

utils.loadPlatform("ti.platforms.control28069");

bios.enableRealTimeAnalysis(prog);
bios.enableMemoryHeaps(prog);
bios.enableRtdx(prog);
bios.enableTskManager(prog);

/*
 * Turn on heaps in L0SARAM and define label SEG0 for heap usage 
 * if this program has useMemSettings true.
 */
bios.L56DPSARAM.createHeap = true;
bios.L56DPSARAM.heapSize = 0x01f0;
bios.L56DPSARAM.enableHeapLabel = true;
bios.L56DPSARAM["heapLabel"] = prog.extern("SEG0");
bios.MEM.BIOSOBJSEG = prog.get("L56DPSARAM");
bios.MEM.MALLOCSEG = prog.get("L56DPSARAM");
bios.MEM.GBLINITSEG = prog.get("L56DPSARAM");
bios.MEM.TRCDATASEG = prog.get("L56DPSARAM");

/*
 * Enable heaps in external SRAM and define label SEG1 for heap usage.
 */

bios.L78DPSARAM.createHeap      = true;
bios.L78DPSARAM.enableHeapLabel = true;
bios.L78DPSARAM["heapLabel"]    = prog.extern("SEG1");
bios.L78DPSARAM.heapSize        = 0x4000;
bios.MEM.BIOSOBJSEG = prog.get("L78DPSARAM");
bios.MEM.MALLOCSEG = prog.get("L78DPSARAM");


/*
 *  Create a trace LOG object for printing basic program output. 
 */

trace = bios.LOG.create("trace");
trace.bufLen = 256;
trace.logType = "circular";

/*  Call LOAD_init() before BIOS_start */
bios.GBL.CALLUSERINITFXN = true;
bios.GBL.USERINITFXN = prog.extern("LOAD_init", "C");


/*
 * ======== loadPrd ========
 */
var loadPrd = bios.PRD.create("loadPrd");
loadPrd.fxn = prog.extern("load");
loadPrd.mode = "continuous";
loadPrd.period = 10;

/*
 * ======== stepPrd ========
 */
var stepPrd = bios.PRD.create("stepPrd");
stepPrd.fxn = prog.extern("step");
stepPrd.mode = "continuous";
stepPrd.period = 10000;

bios.PRD_swi.priority = 1;

/*
 * ======== loadIdl ========
 */
var loadIdl = bios.IDL.create("loadIdl");
loadIdl.fxn = prog.extern("LOAD_idlefxn");
loadIdl.calibration = 1;

/*
 * ======== sts0 ========
 */
var sts0 = bios.STS.create("sts0");
sts0.unitType = "High resolution time based"

// !GRAPHICAL_CONFIG_TOOL_SCRIPT_INSERT_POINT!

if (config.hasReportedError == false) {
    prog.gen();
}
