# Translatable bundle properties
example_0_title = bigtime example
example_0_description = This is an example of using statically created DSP/BIOS objects, idle (IDL), period (PRD), and task (TSK), along with some C++ objects.  In this program, C++ is used to create a real-time clock/calendar.  The C++ class object, Clock, is driven by a variety of DSP/BIOS objects: two PRD objects, two TSK objects, and an IDL object, which are created through the DSP/BIOS Textual Configuration (TConf) Tools.

example_1_title = clk example
example_1_description = This example simply shows a statically recreated DSP/BIOS TSK object, task, using LOG_printf to print clock ticks. In this example, a task goes to sleep some number of ticks and prints the time after it wakes up.

example_2_title = hello example
example_2_description = This example serves as a basic sanity check program for DSP/BIOS. It demonstrates how to print the string 'hello world!' to the DSP/BIOS message log. This example also introduces new users to DSP/BIOS by performing basic string output using a LOG object.

example_3_title = mailbox example
example_3_description = This example uses a mailbox (from the MBX module of DSP/BIOS)to send messages from multiple writer tasks to a single reader task.  In this example, the mailbox, the reader task, and three writer tasks are created by the Configuration Tool.

example_4_title = semaphore example
example_4_description = This is an example of using statically created DSP/BIOS objects, semaphore (SEM) and task (TSK) and dynamically created queue (QUE) objects. This example will show you how to use DSP/BIOS's QUE and SEM APIs to synchronize message sending among tasks.

example_5_title = stairstep example
example_5_description = The purpose of this example is to illustrate the cpuload graph.  In cpuloadInit it gets the CPU frequency using an API and fills the loadValue array with load values corresponding to 25, 50, 75 and 98 percent cpuload. The loadPrd which has a small period calls AUDIO_load function with loadValue. The stepPrd which has a very long period changes the loadValue in a circular fashion.

example_6_title = swi example
example_6_description = This example shows how a lower priority software interrupt (SWI) can interrupt itself by posting a higher priority software interrupt.

example_7_title = tsk example
example_7_description = This example shows the round robin scheduling scheme for tasks of equal priority.

example_8_title = bigtime example
example_8_description = This is an example of using statically created DSP/BIOS objects, idle (IDL), period (PRD), and task (TSK), along with some C++ objects.  In this program, C++ is used to create a real-time clock/calendar.  The C++ class object, Clock, is driven by a variety of DSP/BIOS objects: two PRD objects, two TSK objects, and an IDL object, which are created through the DSP/BIOS Textual Configuration (TConf) Tools.

example_9_title = clk example
example_9_description = This example simply shows a statically recreated DSP/BIOS TSK object, task, using LOG_printf to print clock ticks. In this example, a task goes to sleep some number of ticks and prints the time after it wakes up.

example_10_title = hello example
example_10_description = This example serves as a basic sanity check program for DSP/BIOS. It demonstrates how to print the string 'hello world!' to the DSP/BIOS message log. This example also introduces new users to DSP/BIOS by performing basic string output using a LOG object.

example_11_title = mailbox example
example_11_description = This example uses a mailbox (from the MBX module of DSP/BIOS)to send messages from multiple writer tasks to a single reader task.  In this example, the mailbox, the reader task, and three writer tasks are created by the Configuration Tool.

example_12_title = semaphore example
example_12_description = This is an example of using statically created DSP/BIOS objects, semaphore (SEM) and task (TSK) and dynamically created queue (QUE) objects. This example will show you how to use DSP/BIOS's QUE and SEM APIs to synchronize message sending among tasks.

example_13_title = stairstep example
example_13_description = The purpose of this example is to illustrate the cpuload graph.  In cpuloadInit it gets the CPU frequency using an API and fills the loadValue array with load values corresponding to 25, 50, 75 and 98 percent cpuload. The loadPrd which has a small period calls AUDIO_load function with loadValue. The stepPrd which has a very long period changes the loadValue in a circular fashion.

example_14_title = swi example
example_14_description = This example shows how a lower priority software interrupt (SWI) can interrupt itself by posting a higher priority software interrupt.

example_15_title = tsk example
example_15_description = This example shows the round robin scheduling scheme for tasks of equal priority.

example_16_title = bigtime example
example_16_description = This is an example of using statically created DSP/BIOS objects, idle (IDL), period (PRD), and task (TSK), along with some C++ objects.  In this program, C++ is used to create a real-time clock/calendar.  The C++ class object, Clock, is driven by a variety of DSP/BIOS objects: two PRD objects, two TSK objects, and an IDL object, which are created through the DSP/BIOS Textual Configuration (TConf) Tools.

example_17_title = clk example
example_17_description = This example simply shows a statically recreated DSP/BIOS TSK object, task, using LOG_printf to print clock ticks. In this example, a task goes to sleep some number of ticks and prints the time after it wakes up.

example_18_title = hello example
example_18_description = This example serves as a basic sanity check program for DSP/BIOS. It demonstrates how to print the string 'hello world!' to the DSP/BIOS message log. This example also introduces new users to DSP/BIOS by performing basic string output using a LOG object.

example_19_title = mailbox example
example_19_description = This example uses a mailbox (from the MBX module of DSP/BIOS)to send messages from multiple writer tasks to a single reader task.  In this example, the mailbox, the reader task, and three writer tasks are created by the Configuration Tool.

example_20_title = semaphore example
example_20_description = This is an example of using statically created DSP/BIOS objects, semaphore (SEM) and task (TSK) and dynamically created queue (QUE) objects. This example will show you how to use DSP/BIOS's QUE and SEM APIs to synchronize message sending among tasks.

example_21_title = stairstep example
example_21_description = The purpose of this example is to illustrate the cpuload graph.  In cpuloadInit it gets the CPU frequency using an API and fills the loadValue array with load values corresponding to 25, 50, 75 and 98 percent cpuload. The loadPrd which has a small period calls AUDIO_load function with loadValue. The stepPrd which has a very long period changes the loadValue in a circular fashion.

example_22_title = swi example
example_22_description = This example shows how a lower priority software interrupt (SWI) can interrupt itself by posting a higher priority software interrupt.

example_23_title = tsk example
example_23_description = This example shows the round robin scheduling scheme for tasks of equal priority.

example_24_title = bigtime example
example_24_description = This is an example of using statically created DSP/BIOS objects, idle (IDL), period (PRD), and task (TSK), along with some C++ objects.  In this program, C++ is used to create a real-time clock/calendar.  The C++ class object, Clock, is driven by a variety of DSP/BIOS objects: two PRD objects, two TSK objects, and an IDL object, which are created through the DSP/BIOS Textual Configuration (TConf) Tools.

example_25_title = clk example
example_25_description = This example simply shows a statically recreated DSP/BIOS TSK object, task, using LOG_printf to print clock ticks. In this example, a task goes to sleep some number of ticks and prints the time after it wakes up.

example_26_title = hello example
example_26_description = This example serves as a basic sanity check program for DSP/BIOS. It demonstrates how to print the string 'hello world!' to the DSP/BIOS message log. This example also introduces new users to DSP/BIOS by performing basic string output using a LOG object.

example_27_title = mailbox example
example_27_description = This example uses a mailbox (from the MBX module of DSP/BIOS)to send messages from multiple writer tasks to a single reader task.  In this example, the mailbox, the reader task, and three writer tasks are created by the Configuration Tool.

example_28_title = semaphore example
example_28_description = This is an example of using statically created DSP/BIOS objects, semaphore (SEM) and task (TSK) and dynamically created queue (QUE) objects. This example will show you how to use DSP/BIOS's QUE and SEM APIs to synchronize message sending among tasks.

example_29_title = stairstep example
example_29_description = The purpose of this example is to illustrate the cpuload graph.  In cpuloadInit it gets the CPU frequency using an API and fills the loadValue array with load values corresponding to 25, 50, 75 and 98 percent cpuload. The loadPrd which has a small period calls AUDIO_load function with loadValue. The stepPrd which has a very long period changes the loadValue in a circular fashion.

example_30_title = swi example
example_30_description = This example shows how a lower priority software interrupt (SWI) can interrupt itself by posting a higher priority software interrupt.

example_31_title = tsk example
example_31_description = This example shows the round robin scheduling scheme for tasks of equal priority.

example_32_title = bigtime example
example_32_description = This is an example of using statically created DSP/BIOS objects, idle (IDL), period (PRD), and task (TSK), along with some C++ objects.  In this program, C++ is used to create a real-time clock/calendar.  The C++ class object, Clock, is driven by a variety of DSP/BIOS objects: two PRD objects, two TSK objects, and an IDL object, which are created through the DSP/BIOS Textual Configuration (TConf) Tools.

example_33_title = clk example
example_33_description = This example simply shows a statically recreated DSP/BIOS TSK object, task, using LOG_printf to print clock ticks. In this example, a task goes to sleep some number of ticks and prints the time after it wakes up.

example_34_title = hello example
example_34_description = This example serves as a basic sanity check program for DSP/BIOS. It demonstrates how to print the string 'hello world!' to the DSP/BIOS message log. This example also introduces new users to DSP/BIOS by performing basic string output using a LOG object.

example_35_title = mailbox example
example_35_description = This example uses a mailbox (from the MBX module of DSP/BIOS)to send messages from multiple writer tasks to a single reader task.  In this example, the mailbox, the reader task, and three writer tasks are created by the Configuration Tool.

example_36_title = semaphore example
example_36_description = This is an example of using statically created DSP/BIOS objects, semaphore (SEM) and task (TSK) and dynamically created queue (QUE) objects. This example will show you how to use DSP/BIOS's QUE and SEM APIs to synchronize message sending among tasks.

example_37_title = stairstep example
example_37_description = The purpose of this example is to illustrate the cpuload graph.  In cpuloadInit it gets the CPU frequency using an API and fills the loadValue array with load values corresponding to 25, 50, 75 and 98 percent cpuload. The loadPrd which has a small period calls AUDIO_load function with loadValue. The stepPrd which has a very long period changes the loadValue in a circular fashion.

example_38_title = swi example
example_38_description = This example shows how a lower priority software interrupt (SWI) can interrupt itself by posting a higher priority software interrupt.

example_39_title = tsk example
example_39_description = This example shows the round robin scheduling scheme for tasks of equal priority.

example_40_title = bigtime example
example_40_description = This is an example of using statically created DSP/BIOS objects, idle (IDL), period (PRD), and task (TSK), along with some C++ objects.  In this program, C++ is used to create a real-time clock/calendar.  The C++ class object, Clock, is driven by a variety of DSP/BIOS objects: two PRD objects, two TSK objects, and an IDL object, which are created through the DSP/BIOS Textual Configuration (TConf) Tools.

example_41_title = clk example
example_41_description = This example simply shows a statically recreated DSP/BIOS TSK object, task, using LOG_printf to print clock ticks. In this example, a task goes to sleep some number of ticks and prints the time after it wakes up.

example_42_title = hello example
example_42_description = This example serves as a basic sanity check program for DSP/BIOS. It demonstrates how to print the string 'hello world!' to the DSP/BIOS message log. This example also introduces new users to DSP/BIOS by performing basic string output using a LOG object.

example_43_title = mailbox example
example_43_description = This example uses a mailbox (from the MBX module of DSP/BIOS)to send messages from multiple writer tasks to a single reader task.  In this example, the mailbox, the reader task, and three writer tasks are created by the Configuration Tool.

example_44_title = semaphore example
example_44_description = This is an example of using statically created DSP/BIOS objects, semaphore (SEM) and task (TSK) and dynamically created queue (QUE) objects. This example will show you how to use DSP/BIOS's QUE and SEM APIs to synchronize message sending among tasks.

example_45_title = stairstep example
example_45_description = The purpose of this example is to illustrate the cpuload graph.  In cpuloadInit it gets the CPU frequency using an API and fills the loadValue array with load values corresponding to 25, 50, 75 and 98 percent cpuload. The loadPrd which has a small period calls AUDIO_load function with loadValue. The stepPrd which has a very long period changes the loadValue in a circular fashion.

example_46_title = swi example
example_46_description = This example shows how a lower priority software interrupt (SWI) can interrupt itself by posting a higher priority software interrupt.

example_47_title = tsk example
example_47_description = This example shows the round robin scheduling scheme for tasks of equal priority.

example_48_title = bigtime example
example_48_description = This is an example of using statically created DSP/BIOS objects, idle (IDL), period (PRD), and task (TSK), along with some C++ objects.  In this program, C++ is used to create a real-time clock/calendar.  The C++ class object, Clock, is driven by a variety of DSP/BIOS objects: two PRD objects, two TSK objects, and an IDL object, which are created through the DSP/BIOS Textual Configuration (TConf) Tools.

example_49_title = clk example
example_49_description = This example simply shows a statically recreated DSP/BIOS TSK object, task, using LOG_printf to print clock ticks. In this example, a task goes to sleep some number of ticks and prints the time after it wakes up.

example_50_title = hello example
example_50_description = This example serves as a basic sanity check program for DSP/BIOS. It demonstrates how to print the string 'hello world!' to the DSP/BIOS message log. This example also introduces new users to DSP/BIOS by performing basic string output using a LOG object.

example_51_title = mailbox example
example_51_description = This example uses a mailbox (from the MBX module of DSP/BIOS)to send messages from multiple writer tasks to a single reader task.  In this example, the mailbox, the reader task, and three writer tasks are created by the Configuration Tool.

example_52_title = semaphore example
example_52_description = This is an example of using statically created DSP/BIOS objects, semaphore (SEM) and task (TSK) and dynamically created queue (QUE) objects. This example will show you how to use DSP/BIOS's QUE and SEM APIs to synchronize message sending among tasks.

example_53_title = stairstep example
example_53_description = The purpose of this example is to illustrate the cpuload graph.  In cpuloadInit it gets the CPU frequency using an API and fills the loadValue array with load values corresponding to 25, 50, 75 and 98 percent cpuload. The loadPrd which has a small period calls AUDIO_load function with loadValue. The stepPrd which has a very long period changes the loadValue in a circular fashion.

example_54_title = swi example
example_54_description = This example shows how a lower priority software interrupt (SWI) can interrupt itself by posting a higher priority software interrupt.

example_55_title = tsk example
example_55_description = This example shows the round robin scheduling scheme for tasks of equal priority.

example_56_title = bigtime example
example_56_description = This is an example of using statically created DSP/BIOS objects, idle (IDL), period (PRD), and task (TSK), along with some C++ objects.  In this program, C++ is used to create a real-time clock/calendar.  The C++ class object, Clock, is driven by a variety of DSP/BIOS objects: two PRD objects, two TSK objects, and an IDL object, which are created through the DSP/BIOS Textual Configuration (TConf) Tools.

example_57_title = clk example
example_57_description = This example simply shows a statically recreated DSP/BIOS TSK object, task, using LOG_printf to print clock ticks. In this example, a task goes to sleep some number of ticks and prints the time after it wakes up.

example_58_title = hello example
example_58_description = This example serves as a basic sanity check program for DSP/BIOS. It demonstrates how to print the string 'hello world!' to the DSP/BIOS message log. This example also introduces new users to DSP/BIOS by performing basic string output using a LOG object.

example_59_title = mailbox example
example_59_description = This example uses a mailbox (from the MBX module of DSP/BIOS)to send messages from multiple writer tasks to a single reader task.  In this example, the mailbox, the reader task, and three writer tasks are created by the Configuration Tool.

example_60_title = semaphore example
example_60_description = This is an example of using statically created DSP/BIOS objects, semaphore (SEM) and task (TSK) and dynamically created queue (QUE) objects. This example will show you how to use DSP/BIOS's QUE and SEM APIs to synchronize message sending among tasks.

example_61_title = stairstep example
example_61_description = The purpose of this example is to illustrate the cpuload graph.  In cpuloadInit it gets the CPU frequency using an API and fills the loadValue array with load values corresponding to 25, 50, 75 and 98 percent cpuload. The loadPrd which has a small period calls AUDIO_load function with loadValue. The stepPrd which has a very long period changes the loadValue in a circular fashion.

example_62_title = swi example
example_62_description = This example shows how a lower priority software interrupt (SWI) can interrupt itself by posting a higher priority software interrupt.

example_63_title = tsk example
example_63_description = This example shows the round robin scheduling scheme for tasks of equal priority.

example_64_title = bigtime example
example_64_description = This is an example of using statically created DSP/BIOS objects, idle (IDL), period (PRD), and task (TSK), along with some C++ objects.  In this program, C++ is used to create a real-time clock/calendar.  The C++ class object, Clock, is driven by a variety of DSP/BIOS objects: two PRD objects, two TSK objects, and an IDL object, which are created through the DSP/BIOS Textual Configuration (TConf) Tools.

example_65_title = clk example
example_65_description = This example simply shows a statically recreated DSP/BIOS TSK object, task, using LOG_printf to print clock ticks. In this example, a task goes to sleep some number of ticks and prints the time after it wakes up.

example_66_title = hello example
example_66_description = This example serves as a basic sanity check program for DSP/BIOS. It demonstrates how to print the string 'hello world!' to the DSP/BIOS message log. This example also introduces new users to DSP/BIOS by performing basic string output using a LOG object.

example_67_title = mailbox example
example_67_description = This example uses a mailbox (from the MBX module of DSP/BIOS)to send messages from multiple writer tasks to a single reader task.  In this example, the mailbox, the reader task, and three writer tasks are created by the Configuration Tool.

example_68_title = semaphore example
example_68_description = This is an example of using statically created DSP/BIOS objects, semaphore (SEM) and task (TSK) and dynamically created queue (QUE) objects. This example will show you how to use DSP/BIOS's QUE and SEM APIs to synchronize message sending among tasks.

example_69_title = stairstep example
example_69_description = The purpose of this example is to illustrate the cpuload graph.  In cpuloadInit it gets the CPU frequency using an API and fills the loadValue array with load values corresponding to 25, 50, 75 and 98 percent cpuload. The loadPrd which has a small period calls AUDIO_load function with loadValue. The stepPrd which has a very long period changes the loadValue in a circular fashion.

example_70_title = swi example
example_70_description = This example shows how a lower priority software interrupt (SWI) can interrupt itself by posting a higher priority software interrupt.

example_71_title = tsk example
example_71_description = This example shows the round robin scheduling scheme for tasks of equal priority.

example_72_title = bigtime example
example_72_description = This is an example of using statically created DSP/BIOS objects, idle (IDL), period (PRD), and task (TSK), along with some C++ objects.  In this program, C++ is used to create a real-time clock/calendar.  The C++ class object, Clock, is driven by a variety of DSP/BIOS objects: two PRD objects, two TSK objects, and an IDL object, which are created through the DSP/BIOS Textual Configuration (TConf) Tools.

example_73_title = clk example
example_73_description = This example simply shows a statically recreated DSP/BIOS TSK object, task, using LOG_printf to print clock ticks. In this example, a task goes to sleep some number of ticks and prints the time after it wakes up.

example_74_title = hello example
example_74_description = This example serves as a basic sanity check program for DSP/BIOS. It demonstrates how to print the string 'hello world!' to the DSP/BIOS message log. This example also introduces new users to DSP/BIOS by performing basic string output using a LOG object.

example_75_title = mailbox example
example_75_description = This example uses a mailbox (from the MBX module of DSP/BIOS)to send messages from multiple writer tasks to a single reader task.  In this example, the mailbox, the reader task, and three writer tasks are created by the Configuration Tool.

example_76_title = semaphore example
example_76_description = This is an example of using statically created DSP/BIOS objects, semaphore (SEM) and task (TSK) and dynamically created queue (QUE) objects. This example will show you how to use DSP/BIOS's QUE and SEM APIs to synchronize message sending among tasks.

example_77_title = stairstep example
example_77_description = The purpose of this example is to illustrate the cpuload graph.  In cpuloadInit it gets the CPU frequency using an API and fills the loadValue array with load values corresponding to 25, 50, 75 and 98 percent cpuload. The loadPrd which has a small period calls AUDIO_load function with loadValue. The stepPrd which has a very long period changes the loadValue in a circular fashion.

example_78_title = swi example
example_78_description = This example shows how a lower priority software interrupt (SWI) can interrupt itself by posting a higher priority software interrupt.

example_79_title = tsk example
example_79_description = This example shows the round robin scheduling scheme for tasks of equal priority.

example_80_title = bigtime example
example_80_description = This is an example of using statically created DSP/BIOS objects, idle (IDL), period (PRD), and task (TSK), along with some C++ objects.  In this program, C++ is used to create a real-time clock/calendar.  The C++ class object, Clock, is driven by a variety of DSP/BIOS objects: two PRD objects, two TSK objects, and an IDL object, which are created through the DSP/BIOS Textual Configuration (TConf) Tools.

example_81_title = clk example
example_81_description = This example simply shows a statically recreated DSP/BIOS TSK object, task, using LOG_printf to print clock ticks. In this example, a task goes to sleep some number of ticks and prints the time after it wakes up.

example_82_title = hello example
example_82_description = This example serves as a basic sanity check program for DSP/BIOS. It demonstrates how to print the string 'hello world!' to the DSP/BIOS message log. This example also introduces new users to DSP/BIOS by performing basic string output using a LOG object.

example_83_title = mailbox example
example_83_description = This example uses a mailbox (from the MBX module of DSP/BIOS)to send messages from multiple writer tasks to a single reader task.  In this example, the mailbox, the reader task, and three writer tasks are created by the Configuration Tool.

example_84_title = semaphore example
example_84_description = This is an example of using statically created DSP/BIOS objects, semaphore (SEM) and task (TSK) and dynamically created queue (QUE) objects. This example will show you how to use DSP/BIOS's QUE and SEM APIs to synchronize message sending among tasks.

example_85_title = stairstep example
example_85_description = The purpose of this example is to illustrate the cpuload graph.  In cpuloadInit it gets the CPU frequency using an API and fills the loadValue array with load values corresponding to 25, 50, 75 and 98 percent cpuload. The loadPrd which has a small period calls AUDIO_load function with loadValue. The stepPrd which has a very long period changes the loadValue in a circular fashion.

example_86_title = swi example
example_86_description = This example shows how a lower priority software interrupt (SWI) can interrupt itself by posting a higher priority software interrupt.

example_87_title = tsk example
example_87_description = This example shows the round robin scheduling scheme for tasks of equal priority.

example_88_title = bigtime example
example_88_description = This is an example of using statically created DSP/BIOS objects, idle (IDL), period (PRD), and task (TSK), along with some C++ objects.  In this program, C++ is used to create a real-time clock/calendar.  The C++ class object, Clock, is driven by a variety of DSP/BIOS objects: two PRD objects, two TSK objects, and an IDL object, which are created through the DSP/BIOS Textual Configuration (TConf) Tools.

example_89_title = clk example
example_89_description = This example simply shows a statically recreated DSP/BIOS TSK object, task, using LOG_printf to print clock ticks. In this example, a task goes to sleep some number of ticks and prints the time after it wakes up.

example_90_title = hello example
example_90_description = This example serves as a basic sanity check program for DSP/BIOS. It demonstrates how to print the string 'hello world!' to the DSP/BIOS message log. This example also introduces new users to DSP/BIOS by performing basic string output using a LOG object.

example_91_title = mailbox example
example_91_description = This example uses a mailbox (from the MBX module of DSP/BIOS)to send messages from multiple writer tasks to a single reader task.  In this example, the mailbox, the reader task, and three writer tasks are created by the Configuration Tool.

example_92_title = semaphore example
example_92_description = This is an example of using statically created DSP/BIOS objects, semaphore (SEM) and task (TSK) and dynamically created queue (QUE) objects. This example will show you how to use DSP/BIOS's QUE and SEM APIs to synchronize message sending among tasks.

example_93_title = stairstep example
example_93_description = The purpose of this example is to illustrate the cpuload graph.  In cpuloadInit it gets the CPU frequency using an API and fills the loadValue array with load values corresponding to 25, 50, 75 and 98 percent cpuload. The loadPrd which has a small period calls AUDIO_load function with loadValue. The stepPrd which has a very long period changes the loadValue in a circular fashion.

example_94_title = swi example
example_94_description = This example shows how a lower priority software interrupt (SWI) can interrupt itself by posting a higher priority software interrupt.

example_95_title = tsk example
example_95_description = This example shows the round robin scheduling scheme for tasks of equal priority.

example_96_title = bigtime example
example_96_description = This is an example of using statically created DSP/BIOS objects, idle (IDL), period (PRD), and task (TSK), along with some C++ objects.  In this program, C++ is used to create a real-time clock/calendar.  The C++ class object, Clock, is driven by a variety of DSP/BIOS objects: two PRD objects, two TSK objects, and an IDL object, which are created through the DSP/BIOS Textual Configuration (TConf) Tools.

example_97_title = clk example
example_97_description = This example simply shows a statically recreated DSP/BIOS TSK object, task, using LOG_printf to print clock ticks. In this example, a task goes to sleep some number of ticks and prints the time after it wakes up.

example_98_title = hello example
example_98_description = This example serves as a basic sanity check program for DSP/BIOS. It demonstrates how to print the string 'hello world!' to the DSP/BIOS message log. This example also introduces new users to DSP/BIOS by performing basic string output using a LOG object.

example_99_title = mailbox example
example_99_description = This example uses a mailbox (from the MBX module of DSP/BIOS)to send messages from multiple writer tasks to a single reader task.  In this example, the mailbox, the reader task, and three writer tasks are created by the Configuration Tool.

example_100_title = semaphore example
example_100_description = This is an example of using statically created DSP/BIOS objects, semaphore (SEM) and task (TSK) and dynamically created queue (QUE) objects. This example will show you how to use DSP/BIOS's QUE and SEM APIs to synchronize message sending among tasks.

example_101_title = stairstep example
example_101_description = The purpose of this example is to illustrate the cpuload graph.  In cpuloadInit it gets the CPU frequency using an API and fills the loadValue array with load values corresponding to 25, 50, 75 and 98 percent cpuload. The loadPrd which has a small period calls AUDIO_load function with loadValue. The stepPrd which has a very long period changes the loadValue in a circular fashion.

example_102_title = swi example
example_102_description = This example shows how a lower priority software interrupt (SWI) can interrupt itself by posting a higher priority software interrupt.

example_103_title = tsk example
example_103_description = This example shows the round robin scheduling scheme for tasks of equal priority.

example_104_title = bigtime example
example_104_description = This is an example of using statically created DSP/BIOS objects, idle (IDL), period (PRD), and task (TSK), along with some C++ objects.  In this program, C++ is used to create a real-time clock/calendar.  The C++ class object, Clock, is driven by a variety of DSP/BIOS objects: two PRD objects, two TSK objects, and an IDL object, which are created through the DSP/BIOS Textual Configuration (TConf) Tools.

example_105_title = clk example
example_105_description = This example simply shows a statically recreated DSP/BIOS TSK object, task, using LOG_printf to print clock ticks. In this example, a task goes to sleep some number of ticks and prints the time after it wakes up.

example_106_title = hello example
example_106_description = This example serves as a basic sanity check program for DSP/BIOS. It demonstrates how to print the string 'hello world!' to the DSP/BIOS message log. This example also introduces new users to DSP/BIOS by performing basic string output using a LOG object.

example_107_title = mailbox example
example_107_description = This example uses a mailbox (from the MBX module of DSP/BIOS)to send messages from multiple writer tasks to a single reader task.  In this example, the mailbox, the reader task, and three writer tasks are created by the Configuration Tool.

example_108_title = semaphore example
example_108_description = This is an example of using statically created DSP/BIOS objects, semaphore (SEM) and task (TSK) and dynamically created queue (QUE) objects. This example will show you how to use DSP/BIOS's QUE and SEM APIs to synchronize message sending among tasks.

example_109_title = stairstep example
example_109_description = The purpose of this example is to illustrate the cpuload graph.  In cpuloadInit it gets the CPU frequency using an API and fills the loadValue array with load values corresponding to 25, 50, 75 and 98 percent cpuload. The loadPrd which has a small period calls AUDIO_load function with loadValue. The stepPrd which has a very long period changes the loadValue in a circular fashion.

example_110_title = swi example
example_110_description = This example shows how a lower priority software interrupt (SWI) can interrupt itself by posting a higher priority software interrupt.

example_111_title = tsk example
example_111_description = This example shows the round robin scheduling scheme for tasks of equal priority.

example_112_title = bigtime example
example_112_description = This is an example of using statically created DSP/BIOS objects, idle (IDL), period (PRD), and task (TSK), along with some C++ objects.  In this program, C++ is used to create a real-time clock/calendar.  The C++ class object, Clock, is driven by a variety of DSP/BIOS objects: two PRD objects, two TSK objects, and an IDL object, which are created through the DSP/BIOS Textual Configuration (TConf) Tools.

example_113_title = clk example
example_113_description = This example simply shows a statically recreated DSP/BIOS TSK object, task, using LOG_printf to print clock ticks. In this example, a task goes to sleep some number of ticks and prints the time after it wakes up.

example_114_title = hello example
example_114_description = This example serves as a basic sanity check program for DSP/BIOS. It demonstrates how to print the string 'hello world!' to the DSP/BIOS message log. This example also introduces new users to DSP/BIOS by performing basic string output using a LOG object.

example_115_title = mailbox example
example_115_description = This example uses a mailbox (from the MBX module of DSP/BIOS)to send messages from multiple writer tasks to a single reader task.  In this example, the mailbox, the reader task, and three writer tasks are created by the Configuration Tool.

example_116_title = semaphore example
example_116_description = This is an example of using statically created DSP/BIOS objects, semaphore (SEM) and task (TSK) and dynamically created queue (QUE) objects. This example will show you how to use DSP/BIOS's QUE and SEM APIs to synchronize message sending among tasks.

example_117_title = stairstep example
example_117_description = The purpose of this example is to illustrate the cpuload graph.  In cpuloadInit it gets the CPU frequency using an API and fills the loadValue array with load values corresponding to 25, 50, 75 and 98 percent cpuload. The loadPrd which has a small period calls AUDIO_load function with loadValue. The stepPrd which has a very long period changes the loadValue in a circular fashion.

example_118_title = swi example
example_118_description = This example shows how a lower priority software interrupt (SWI) can interrupt itself by posting a higher priority software interrupt.

example_119_title = tsk example
example_119_description = This example shows the round robin scheduling scheme for tasks of equal priority.

example_120_title = bigtime example
example_120_description = This is an example of using statically created DSP/BIOS objects, idle (IDL), period (PRD), and task (TSK), along with some C++ objects.  In this program, C++ is used to create a real-time clock/calendar.  The C++ class object, Clock, is driven by a variety of DSP/BIOS objects: two PRD objects, two TSK objects, and an IDL object, which are created through the DSP/BIOS Textual Configuration (TConf) Tools.

example_121_title = clk example
example_121_description = This example simply shows a statically recreated DSP/BIOS TSK object, task, using LOG_printf to print clock ticks. In this example, a task goes to sleep some number of ticks and prints the time after it wakes up.

example_122_title = hello example
example_122_description = This example serves as a basic sanity check program for DSP/BIOS. It demonstrates how to print the string 'hello world!' to the DSP/BIOS message log. This example also introduces new users to DSP/BIOS by performing basic string output using a LOG object.

example_123_title = mailbox example
example_123_description = This example uses a mailbox (from the MBX module of DSP/BIOS)to send messages from multiple writer tasks to a single reader task.  In this example, the mailbox, the reader task, and three writer tasks are created by the Configuration Tool.

example_124_title = semaphore example
example_124_description = This is an example of using statically created DSP/BIOS objects, semaphore (SEM) and task (TSK) and dynamically created queue (QUE) objects. This example will show you how to use DSP/BIOS's QUE and SEM APIs to synchronize message sending among tasks.

example_125_title = stairstep example
example_125_description = The purpose of this example is to illustrate the cpuload graph.  In cpuloadInit it gets the CPU frequency using an API and fills the loadValue array with load values corresponding to 25, 50, 75 and 98 percent cpuload. The loadPrd which has a small period calls AUDIO_load function with loadValue. The stepPrd which has a very long period changes the loadValue in a circular fashion.

example_126_title = swi example
example_126_description = This example shows how a lower priority software interrupt (SWI) can interrupt itself by posting a higher priority software interrupt.

example_127_title = tsk example
example_127_description = This example shows the round robin scheduling scheme for tasks of equal priority.

example_128_title = bigtime example
example_128_description = This is an example of using statically created DSP/BIOS objects, idle (IDL), period (PRD), and task (TSK), along with some C++ objects.  In this program, C++ is used to create a real-time clock/calendar.  The C++ class object, Clock, is driven by a variety of DSP/BIOS objects: two PRD objects, two TSK objects, and an IDL object, which are created through the DSP/BIOS Textual Configuration (TConf) Tools.

example_129_title = clk example
example_129_description = This example simply shows a statically recreated DSP/BIOS TSK object, task, using LOG_printf to print clock ticks. In this example, a task goes to sleep some number of ticks and prints the time after it wakes up.

example_130_title = hello example
example_130_description = This example serves as a basic sanity check program for DSP/BIOS. It demonstrates how to print the string 'hello world!' to the DSP/BIOS message log. This example also introduces new users to DSP/BIOS by performing basic string output using a LOG object.

example_131_title = mailbox example
example_131_description = This example uses a mailbox (from the MBX module of DSP/BIOS)to send messages from multiple writer tasks to a single reader task.  In this example, the mailbox, the reader task, and three writer tasks are created by the Configuration Tool.

example_132_title = semaphore example
example_132_description = This is an example of using statically created DSP/BIOS objects, semaphore (SEM) and task (TSK) and dynamically created queue (QUE) objects. This example will show you how to use DSP/BIOS's QUE and SEM APIs to synchronize message sending among tasks.

example_133_title = stairstep example
example_133_description = The purpose of this example is to illustrate the cpuload graph.  In cpuloadInit it gets the CPU frequency using an API and fills the loadValue array with load values corresponding to 25, 50, 75 and 98 percent cpuload. The loadPrd which has a small period calls AUDIO_load function with loadValue. The stepPrd which has a very long period changes the loadValue in a circular fashion.

example_134_title = swi example
example_134_description = This example shows how a lower priority software interrupt (SWI) can interrupt itself by posting a higher priority software interrupt.

example_135_title = tsk example
example_135_description = This example shows the round robin scheduling scheme for tasks of equal priority.

example_136_title = bigtime example
example_136_description = This is an example of using statically created DSP/BIOS objects, idle (IDL), period (PRD), and task (TSK), along with some C++ objects.  In this program, C++ is used to create a real-time clock/calendar.  The C++ class object, Clock, is driven by a variety of DSP/BIOS objects: two PRD objects, two TSK objects, and an IDL object, which are created through the DSP/BIOS Textual Configuration (TConf) Tools.

example_137_title = clk example
example_137_description = This example simply shows a statically recreated DSP/BIOS TSK object, task, using LOG_printf to print clock ticks. In this example, a task goes to sleep some number of ticks and prints the time after it wakes up.

example_138_title = hello example
example_138_description = This example serves as a basic sanity check program for DSP/BIOS. It demonstrates how to print the string 'hello world!' to the DSP/BIOS message log. This example also introduces new users to DSP/BIOS by performing basic string output using a LOG object.

example_139_title = mailbox example
example_139_description = This example uses a mailbox (from the MBX module of DSP/BIOS)to send messages from multiple writer tasks to a single reader task.  In this example, the mailbox, the reader task, and three writer tasks are created by the Configuration Tool.

example_140_title = semaphore example
example_140_description = This is an example of using statically created DSP/BIOS objects, semaphore (SEM) and task (TSK) and dynamically created queue (QUE) objects. This example will show you how to use DSP/BIOS's QUE and SEM APIs to synchronize message sending among tasks.

example_141_title = stairstep example
example_141_description = The purpose of this example is to illustrate the cpuload graph.  In cpuloadInit it gets the CPU frequency using an API and fills the loadValue array with load values corresponding to 25, 50, 75 and 98 percent cpuload. The loadPrd which has a small period calls AUDIO_load function with loadValue. The stepPrd which has a very long period changes the loadValue in a circular fashion.

example_142_title = swi example
example_142_description = This example shows how a lower priority software interrupt (SWI) can interrupt itself by posting a higher priority software interrupt.

example_143_title = tsk example
example_143_description = This example shows the round robin scheduling scheme for tasks of equal priority.

example_144_title = bigtime example
example_144_description = This is an example of using statically created DSP/BIOS objects, idle (IDL), period (PRD), and task (TSK), along with some C++ objects.  In this program, C++ is used to create a real-time clock/calendar.  The C++ class object, Clock, is driven by a variety of DSP/BIOS objects: two PRD objects, two TSK objects, and an IDL object, which are created through the DSP/BIOS Textual Configuration (TConf) Tools.

example_145_title = clk example
example_145_description = This example simply shows a statically recreated DSP/BIOS TSK object, task, using LOG_printf to print clock ticks. In this example, a task goes to sleep some number of ticks and prints the time after it wakes up.

example_146_title = hello example
example_146_description = This example serves as a basic sanity check program for DSP/BIOS. It demonstrates how to print the string 'hello world!' to the DSP/BIOS message log. This example also introduces new users to DSP/BIOS by performing basic string output using a LOG object.

example_147_title = mailbox example
example_147_description = This example uses a mailbox (from the MBX module of DSP/BIOS)to send messages from multiple writer tasks to a single reader task.  In this example, the mailbox, the reader task, and three writer tasks are created by the Configuration Tool.

example_148_title = semaphore example
example_148_description = This is an example of using statically created DSP/BIOS objects, semaphore (SEM) and task (TSK) and dynamically created queue (QUE) objects. This example will show you how to use DSP/BIOS's QUE and SEM APIs to synchronize message sending among tasks.

example_149_title = stairstep example
example_149_description = The purpose of this example is to illustrate the cpuload graph.  In cpuloadInit it gets the CPU frequency using an API and fills the loadValue array with load values corresponding to 25, 50, 75 and 98 percent cpuload. The loadPrd which has a small period calls AUDIO_load function with loadValue. The stepPrd which has a very long period changes the loadValue in a circular fashion.

example_150_title = swi example
example_150_description = This example shows how a lower priority software interrupt (SWI) can interrupt itself by posting a higher priority software interrupt.

example_151_title = tsk example
example_151_description = This example shows the round robin scheduling scheme for tasks of equal priority.

example_152_title = bigtime example
example_152_description = This is an example of using statically created DSP/BIOS objects, idle (IDL), period (PRD), and task (TSK), along with some C++ objects.  In this program, C++ is used to create a real-time clock/calendar.  The C++ class object, Clock, is driven by a variety of DSP/BIOS objects: two PRD objects, two TSK objects, and an IDL object, which are created through the DSP/BIOS Textual Configuration (TConf) Tools.

example_153_title = clk example
example_153_description = This example simply shows a statically recreated DSP/BIOS TSK object, task, using LOG_printf to print clock ticks. In this example, a task goes to sleep some number of ticks and prints the time after it wakes up.

example_154_title = hello example
example_154_description = This example serves as a basic sanity check program for DSP/BIOS. It demonstrates how to print the string 'hello world!' to the DSP/BIOS message log. This example also introduces new users to DSP/BIOS by performing basic string output using a LOG object.

example_155_title = mailbox example
example_155_description = This example uses a mailbox (from the MBX module of DSP/BIOS)to send messages from multiple writer tasks to a single reader task.  In this example, the mailbox, the reader task, and three writer tasks are created by the Configuration Tool.

example_156_title = semaphore example
example_156_description = This is an example of using statically created DSP/BIOS objects, semaphore (SEM) and task (TSK) and dynamically created queue (QUE) objects. This example will show you how to use DSP/BIOS's QUE and SEM APIs to synchronize message sending among tasks.

example_157_title = stairstep example
example_157_description = The purpose of this example is to illustrate the cpuload graph.  In cpuloadInit it gets the CPU frequency using an API and fills the loadValue array with load values corresponding to 25, 50, 75 and 98 percent cpuload. The loadPrd which has a small period calls AUDIO_load function with loadValue. The stepPrd which has a very long period changes the loadValue in a circular fashion.

example_158_title = swi example
example_158_description = This example shows how a lower priority software interrupt (SWI) can interrupt itself by posting a higher priority software interrupt.

example_159_title = tsk example
example_159_description = This example shows the round robin scheduling scheme for tasks of equal priority.

example_160_title = bigtime example
example_160_description = This is an example of using statically created DSP/BIOS objects, idle (IDL), period (PRD), and task (TSK), along with some C++ objects.  In this program, C++ is used to create a real-time clock/calendar.  The C++ class object, Clock, is driven by a variety of DSP/BIOS objects: two PRD objects, two TSK objects, and an IDL object, which are created through the DSP/BIOS Textual Configuration (TConf) Tools.

example_161_title = clk example
example_161_description = This example simply shows a statically recreated DSP/BIOS TSK object, task, using LOG_printf to print clock ticks. In this example, a task goes to sleep some number of ticks and prints the time after it wakes up.

example_162_title = hello example
example_162_description = This example serves as a basic sanity check program for DSP/BIOS. It demonstrates how to print the string 'hello world!' to the DSP/BIOS message log. This example also introduces new users to DSP/BIOS by performing basic string output using a LOG object.

example_163_title = mailbox example
example_163_description = This example uses a mailbox (from the MBX module of DSP/BIOS)to send messages from multiple writer tasks to a single reader task.  In this example, the mailbox, the reader task, and three writer tasks are created by the Configuration Tool.

example_164_title = semaphore example
example_164_description = This is an example of using statically created DSP/BIOS objects, semaphore (SEM) and task (TSK) and dynamically created queue (QUE) objects. This example will show you how to use DSP/BIOS's QUE and SEM APIs to synchronize message sending among tasks.

example_165_title = stairstep example
example_165_description = The purpose of this example is to illustrate the cpuload graph.  In cpuloadInit it gets the CPU frequency using an API and fills the loadValue array with load values corresponding to 25, 50, 75 and 98 percent cpuload. The loadPrd which has a small period calls AUDIO_load function with loadValue. The stepPrd which has a very long period changes the loadValue in a circular fashion.

example_166_title = swi example
example_166_description = This example shows how a lower priority software interrupt (SWI) can interrupt itself by posting a higher priority software interrupt.

example_167_title = tsk example
example_167_description = This example shows the round robin scheduling scheme for tasks of equal priority.

example_168_title = bigtime example
example_168_description = This is an example of using statically created DSP/BIOS objects, idle (IDL), period (PRD), and task (TSK), along with some C++ objects.  In this program, C++ is used to create a real-time clock/calendar.  The C++ class object, Clock, is driven by a variety of DSP/BIOS objects: two PRD objects, two TSK objects, and an IDL object, which are created through the DSP/BIOS Textual Configuration (TConf) Tools.

example_169_title = clk example
example_169_description = This example simply shows a statically recreated DSP/BIOS TSK object, task, using LOG_printf to print clock ticks. In this example, a task goes to sleep some number of ticks and prints the time after it wakes up.

example_170_title = hello example
example_170_description = This example serves as a basic sanity check program for DSP/BIOS. It demonstrates how to print the string 'hello world!' to the DSP/BIOS message log. This example also introduces new users to DSP/BIOS by performing basic string output using a LOG object.

example_171_title = mailbox example
example_171_description = This example uses a mailbox (from the MBX module of DSP/BIOS)to send messages from multiple writer tasks to a single reader task.  In this example, the mailbox, the reader task, and three writer tasks are created by the Configuration Tool.

example_172_title = semaphore example
example_172_description = This is an example of using statically created DSP/BIOS objects, semaphore (SEM) and task (TSK) and dynamically created queue (QUE) objects. This example will show you how to use DSP/BIOS's QUE and SEM APIs to synchronize message sending among tasks.

example_173_title = stairstep example
example_173_description = The purpose of this example is to illustrate the cpuload graph.  In cpuloadInit it gets the CPU frequency using an API and fills the loadValue array with load values corresponding to 25, 50, 75 and 98 percent cpuload. The loadPrd which has a small period calls AUDIO_load function with loadValue. The stepPrd which has a very long period changes the loadValue in a circular fashion.

example_174_title = swi example
example_174_description = This example shows how a lower priority software interrupt (SWI) can interrupt itself by posting a higher priority software interrupt.

example_175_title = tsk example
example_175_description = This example shows the round robin scheduling scheme for tasks of equal priority.

example_176_title = bigtime example
example_176_description = This is an example of using statically created DSP/BIOS objects, idle (IDL), period (PRD), and task (TSK), along with some C++ objects.  In this program, C++ is used to create a real-time clock/calendar.  The C++ class object, Clock, is driven by a variety of DSP/BIOS objects: two PRD objects, two TSK objects, and an IDL object, which are created through the DSP/BIOS Textual Configuration (TConf) Tools.

example_177_title = clk example
example_177_description = This example simply shows a statically recreated DSP/BIOS TSK object, task, using LOG_printf to print clock ticks. In this example, a task goes to sleep some number of ticks and prints the time after it wakes up.

example_178_title = hello example
example_178_description = This example serves as a basic sanity check program for DSP/BIOS. It demonstrates how to print the string 'hello world!' to the DSP/BIOS message log. This example also introduces new users to DSP/BIOS by performing basic string output using a LOG object.

example_179_title = mailbox example
example_179_description = This example uses a mailbox (from the MBX module of DSP/BIOS)to send messages from multiple writer tasks to a single reader task.  In this example, the mailbox, the reader task, and three writer tasks are created by the Configuration Tool.

example_180_title = semaphore example
example_180_description = This is an example of using statically created DSP/BIOS objects, semaphore (SEM) and task (TSK) and dynamically created queue (QUE) objects. This example will show you how to use DSP/BIOS's QUE and SEM APIs to synchronize message sending among tasks.

example_181_title = stairstep example
example_181_description = The purpose of this example is to illustrate the cpuload graph.  In cpuloadInit it gets the CPU frequency using an API and fills the loadValue array with load values corresponding to 25, 50, 75 and 98 percent cpuload. The loadPrd which has a small period calls AUDIO_load function with loadValue. The stepPrd which has a very long period changes the loadValue in a circular fashion.

example_182_title = swi example
example_182_description = This example shows how a lower priority software interrupt (SWI) can interrupt itself by posting a higher priority software interrupt.

example_183_title = tsk example
example_183_description = This example shows the round robin scheduling scheme for tasks of equal priority.

example_184_title = bigtime example
example_184_description = This is an example of using statically created DSP/BIOS objects, idle (IDL), period (PRD), and task (TSK), along with some C++ objects.  In this program, C++ is used to create a real-time clock/calendar.  The C++ class object, Clock, is driven by a variety of DSP/BIOS objects: two PRD objects, two TSK objects, and an IDL object, which are created through the DSP/BIOS Textual Configuration (TConf) Tools.

example_185_title = clk example
example_185_description = This example simply shows a statically recreated DSP/BIOS TSK object, task, using LOG_printf to print clock ticks. In this example, a task goes to sleep some number of ticks and prints the time after it wakes up.

example_186_title = hello example
example_186_description = This example serves as a basic sanity check program for DSP/BIOS. It demonstrates how to print the string 'hello world!' to the DSP/BIOS message log. This example also introduces new users to DSP/BIOS by performing basic string output using a LOG object.

example_187_title = mailbox example
example_187_description = This example uses a mailbox (from the MBX module of DSP/BIOS)to send messages from multiple writer tasks to a single reader task.  In this example, the mailbox, the reader task, and three writer tasks are created by the Configuration Tool.

example_188_title = semaphore example
example_188_description = This is an example of using statically created DSP/BIOS objects, semaphore (SEM) and task (TSK) and dynamically created queue (QUE) objects. This example will show you how to use DSP/BIOS's QUE and SEM APIs to synchronize message sending among tasks.

example_189_title = stairstep example
example_189_description = The purpose of this example is to illustrate the cpuload graph.  In cpuloadInit it gets the CPU frequency using an API and fills the loadValue array with load values corresponding to 25, 50, 75 and 98 percent cpuload. The loadPrd which has a small period calls AUDIO_load function with loadValue. The stepPrd which has a very long period changes the loadValue in a circular fashion.

example_190_title = swi example
example_190_description = This example shows how a lower priority software interrupt (SWI) can interrupt itself by posting a higher priority software interrupt.

example_191_title = tsk example
example_191_description = This example shows the round robin scheduling scheme for tasks of equal priority.

