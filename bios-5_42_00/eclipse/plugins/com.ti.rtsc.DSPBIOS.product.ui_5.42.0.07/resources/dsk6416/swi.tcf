/*
 *  Copyright 2010 by Texas Instruments Incorporated.
 *  All rights reserved. Property of Texas Instruments Incorporated.
 *  Restricted rights to use, duplicate or disclose this code are
 *  granted through contract.
 *
 */
/*
 *  ======== swi.tcf ========
 *  Configuration script used to generate the example's configuration files
 */

utils.loadPlatform("ti.platforms.dsk6416");

bios.enableRealTimeAnalysis(prog);
bios.enableMemoryHeaps(prog);
bios.enableRtdx(prog);
bios.enableTskManager(prog);

/*
 * Enable heaps in IRAM and define label SEG0 for heap usage.
 */
bios.IRAM.createHeap      = true;
bios.IRAM.enableHeapLabel = true;
bios.IRAM["heapLabel"]    = prog.extern("SEG0");
bios.IRAM.heapSize        = 0x8000;
bios.MEM.BIOSOBJSEG = prog.get("IRAM");
bios.MEM.MALLOCSEG = prog.get("IRAM");
/* Increase the buffer size of the LOG_system LOG object */

bios.LOG_system.bufLen = 512;

/* Create a trace LOG object for printing basic program output.  */

var trace = bios.LOG.create("trace");
trace.bufLen = 128;
trace.logType =  "circular";

/* Create and initialize two SWI objects */

var SWI0 = bios.SWI.create("SWI0");
SWI0.priority = 1;
SWI0["fxn"] = prog.extern("swiFxn0");

var SWI1 = bios.SWI.create("SWI1");
SWI1.priority = 2;
SWI1["fxn"] = prog.extern("swiFxn1");
// !GRAPHICAL_CONFIG_TOOL_SCRIPT_INSERT_POINT!

if (config.hasReportedError == false) {
    prog.gen();
}
