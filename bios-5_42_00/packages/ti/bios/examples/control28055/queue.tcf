/*
 *  Copyright 2010 by Texas Instruments Incorporated.
 *  All rights reserved. Property of Texas Instruments Incorporated.
 *  Restricted rights to use, duplicate or disclose this code are
 *  granted through contract.
 *
 */
/*
 *  ======== queue.tcf ========
 *  Configuration script used to generate the example's configuration files
 */

utils.loadPlatform("ti.platforms.control28055");

bios.enableRealTimeAnalysis(prog);
bios.enableMemoryHeaps(prog);
bios.enableRtdx(prog);
bios.enableTskManager(prog);

/*
 * Turn on heaps in L03SARAM and define label SEG0 for heap usage 
 * if this program has useMemSettings true.
 */
bios.L03SARAM.createHeap = true;
bios.L03SARAM.heapSize = 0x200;
bios.L03SARAM.enableHeapLabel = true;
bios.L03SARAM["heapLabel"] = prog.extern("SEG0");
bios.MEM.BIOSOBJSEG = prog.get("L03SARAM");
bios.MEM.MALLOCSEG = prog.get("L03SARAM");
bios.MEM.GBLINITSEG = prog.get("L03SARAM");
bios.MEM.TRCDATASEG = prog.get("L03SARAM");
/* Increase the buffer size of the LOG_system LOG object */

bios.LOG_system.bufLen = 512;

/* Create a trace LOG object for printing basic program output.  */

var trace = bios.LOG.create("trace");
trace.bufLen = 1024;
trace.logType = "circular";

/* Create a QUE object for sending messages from writer to reader */

var queue = bios.QUE.create("queue");

/* Create a QUE object to store pre-allocated message objects for efficieny */

var freequeue = bios.QUE.create("freequeue");

/* Create a TSK object and map it to the initTask function */

var initTsk = bios.TSK.create("initTsk");
initTsk.priority = 15;
initTsk["fxn"] = prog.extern("initTask");

/* Create a TSK object and map it to the function task */

var tsk0 = bios.TSK.create("tsk0");
tsk0["fxn"] = prog.extern("task");
// !GRAPHICAL_CONFIG_TOOL_SCRIPT_INSERT_POINT!

if (config.hasReportedError == false) {
    prog.gen();
}
